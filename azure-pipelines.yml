# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '9.x'
  displayName: 'Install Node.js'


- task: Npm@1
  inputs:
    command: 'install'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'config set access public --global'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run prepublish'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'junit.xml'
  condition: always()
  displayName: 'Upload junit test results'

- script: |
    PackageName=$(npm list --json --depth=0 | sed -n 2p | cut -d '"' -f4)
    NewPackageVersion=$(npm list --json --depth=0 | sed -n 3p | cut -d '"' -f4)
    PublishedPackageVersion=$(npm show $PackageName version)
    echo "##vso[task.setvariable variable=NewPackageVersion;]$NewPackageVersion"
    echo "##vso[task.setvariable variable=PublishedPackageVersion;]$PublishedPackageVersion"
  displayName: "Extract package versions"

- task: Npm@1
  inputs:
    command: publish
    publishEndpoint: 'npm turtlenetwork'
  displayName: "Publish"
  condition: |
    and(
      ne(variables['NewPackageVersion'], variables['PublishedPackageVersion']), 
      succeeded(), 
      eq(variables['Build.SourceBranch'], 'refs/heads/master')
    )    
